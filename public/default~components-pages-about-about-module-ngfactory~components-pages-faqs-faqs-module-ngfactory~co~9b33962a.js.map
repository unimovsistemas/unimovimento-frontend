{"version":3,"sources":["./src/app/components/models/contact/contact.ts","./src/app/components/shared/quote-cta/quote-cta.component.ts","./src/app/components/shared/quote-cta/quote-cta.component.html","./src/app/components/helper/contact/contact-helper.service.ts"],"names":[],"mappings":"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","file":"default~components-pages-about-about-module-ngfactory~components-pages-faqs-faqs-module-ngfactory~co~9b33962a.js","sourcesContent":["export class Contact {\n    id: number | undefined;\n    name: string | undefined;\n    email: string | undefined;\n    phone?: string | undefined;\n    subject: string | undefined;\n    message: string | undefined;\n    recaptcha: string | undefined;\n}\n","import { Component, OnInit } from '@angular/core';\nimport data from \"../../data/clients.json\";\nimport { ContactService } from 'src/app/components/helper/contact/contact-helper.service';\nimport { Contact } from '../../models/contact/contact';\n\n@Component({\n  selector: 'app-quote-cta',\n  templateUrl: './quote-cta.component.html',\n  styleUrls: ['./quote-cta.component.css']\n})\nexport class QuoteCtaComponent implements OnInit {\n\n  public clients = data;\n  model = new Contact;\n  submitted = false;\n  error: {} | undefined; \n  constructor(private contactService: ContactService) { }\n  onSubmit() {\n    this.submitted = true;\n    return this.contactService.contactForm(this.model).subscribe(\n      data => this.model = data,\n      error => this.error = error\n    );\n  };\n  resolved(captchaResponse: string) {\n      console.log(`Resolved response token: ${captchaResponse}`);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section dark-overlay dark-overlay-3 bg-cover bg-center bg-norepeat\"\n    [style.background-image]=\"'url(assets/img/bg1.jpg)'\">\n    <div class=\"container\">\n        <div class=\"row align-items-center\">\n            <div class=\"col-lg-6 mb-lg-30\">\n                <form (ngSubmit)=\"onSubmit()\" #contactForm=\"ngForm\">\n                    <div class=\"form-row\">\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group\">\n                                <i class=\"far fa-user\"></i>\n                                <input type=\"text\" class=\"form-control transparent\" placeholder=\"Full Name\" name=\"name\"\n                                    [(ngModel)]=\"model.name\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group\">\n                                <i class=\"far fa-envelope\"></i>\n                                <input type=\"email\" class=\"form-control transparent\" placeholder=\"Email Id\" name=\"email\"\n                                    [(ngModel)]=\"model.email\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group\">\n                                <i class=\"far fa-pencil\"></i>\n                                <input type=\"text\" class=\"form-control transparent\" placeholder=\"Subject\" name=\"subject\"\n                                    [(ngModel)]=\"model.subject\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group\">\n                                <i class=\"far fa-phone\"></i>\n                                <input type=\"text\" class=\"form-control transparent\" placeholder=\"Phone No.\" name=\"phone\"\n                                    [(ngModel)]=\"model.phone\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-12\">\n                            <div class=\"form-group\">\n                                <textarea class=\"form-control transparent\" placeholder=\"Enter Message\" rows=\"4\"\n                                    name=\"message\" [(ngModel)]=\"model.message\" required></textarea>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-12\">\n                            <button type=\"submit\" class=\"sigma_btn-custom d-block w-100\"\n                                [disabled]=\"!contactForm.form.valid\"> Get a Quote <i class=\"far fa-arrow-right\"></i>\n                            </button>\n                            <re-captcha (resolved)=\"resolved($event)\" name=\"recaptcha\" [(ngModel)]=\"model.recaptcha\"\n                                siteKey=\"6LdxUhMaAAAAAIrQt-_6Gz7F_58S4FlPWaxOh5ib\" size=\"invisible\"></re-captcha>\n                            <!-- Form Messages -->\n                            <div class=\"service-error w-100\" *ngIf=\"error\">\n                                <ngb-alert type=\"danger\" class=\"mb-0 w-100 mt-3\" [dismissible]=\"false\">\n                                    <strong>Oops!</strong> Something bad happened. Please try again later.\n                                </ngb-alert>\n                            </div>\n                            <div [hidden]=\"!submitted\" class=\"contact-message w-100\">\n                                <div *ngIf=\"model.id\" class=\"contact-success w-100 mt-3\">\n                                    <ngb-alert type=\"success\" class=\"mb-0 w-100\" [dismissible]=\"false\">\n                                        <strong>Success!</strong> Contact form has been successfully submitted.\n                                    </ngb-alert>\n                                </div>\n                            </div> \n                            <!-- Form Messages -->\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-lg-6\">\n                <div class=\"row\">\n                    <!-- Data -->\n                    <div class=\"col-lg-6\" *ngFor=\"let item of clients | slice:0:6\">\n                        <div class=\"sigma_client\">\n                            <img [src]=\"item.image\" alt=\"client\">\n                        </div>\n                    </div>\n                    <!-- Data -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Contact } from '../../models/contact/contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  ServerUrl = 'https://metropolitanhost.com/scripts/sendmail.php';\n  errorData: {} | undefined;\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n  };\n\n  constructor( private http: HttpClient ) { }\n\n  contactForm(formdata: Contact) {\n    return this.http.post<Contact>(this.ServerUrl, formdata, this.httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n\n      // A client-side or network error occurred. Handle it accordingly.\n\n      console.error('An error occurred:', error.error.message);\n    } else {\n\n      // The backend returned an unsuccessful response code.\n\n      // The response body may contain clues as to what went wrong.\n\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n\n    // return an observable with a user-facing error message\n\n    this.errorData = {\n      errorTitle: 'Oops! Request for document failed',\n      errorDesc: 'Something bad happened. Please try again later.'\n    };\n    return throwError(this.errorData);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}